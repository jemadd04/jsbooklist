How to add book to list

1. Create instructors for the book and the UI

2. Create event listeners. This is important so that when the form fields are filled out and you hit the submit button (the event), the function runs

3. Inside of the function, create variables for each field. It stores the form values into the field into that respective variable. 
3a. Include the preventDefault at the bottom so that the console log is entered and doesnt flash

4. Instantiate the book object. This puts the title, author, and isbn variables into an object. Also creates the prototype.

5. Add book to table with UI object. Instantiate UI object and add the prototype with dot notation. You also have to pass in the book object. This allows the Book object to be passed through the UI to the addBookToList prototype. This is necessary so that the Book object can be added to the table in the following steps. 

6. In the addBookToList prototype, create a variable to grab the empty table body for the book list

7. Create another variable inside the prototype that creates a table row element. At this point this empty table row element isn't attached to the table body. 

8. Insert columns into the element created in step 7 by using innerHTML. Within the innerHTML we can create each data cell for title, author, and ISBN as well as the delete button. We can then appendChild onto the empty list variable (step 6) and pass in the table row variable from step 7

9. In the function add the clearFields prototype to the ui constructor. The clearFields prototype is created in the next step.

10. Create clearFields prototype to clear the title, author, and ISBN fields. It's important to add this near the end of the function because it will run anytime the submit button is clicked since the function has an eventhandler for 'click' on it. 

------VALIDATION-------
1. In the event listener under the UI instantiation, create if statement to validate. 

2. Inside if statement, add the validation prototype to the UI variable. The actual creation of the prototype is in the next step. The validation prototype takes two parameters: 1) the message you want displayed and 2) the class that was created in index.html

3. Create validation prototype. Again it will take in two parameters, 'message' and 'className'. These two parameters are defined when it's actually called in the function.

4. Inside the validation prototype, we need to craete a variable to construct the div element for the pop up message.

5. Add the classes to the div. This is exactly the same as when you define it in the HTML doc. Ex: <div class="alert error"></div>. In this case we are adding a class of alert and also passing in a class of whatever the className is thats entered into the second parameter of the function.

6. Add text by appending child to the div with a createTextNode. The createTextNode will take message as the parameter. 

7. Insert the alert into DOM by getting parent and the form since we want to put the alert right before the form. 

8. Take container and use insertBefore. This will insert the div before the form. This and the previous steps is how the code knows where to place the alert.

9. Use setTimeout to make the alert disappear after a set period of time

10. In the if statement use the same prototype to show the success message when a book is added. For the parameters enter the message and use 'success'.

---Give functionality to X button to delete---
1. Create event listener for delete. Instead of using delete class, we need to use the parent node of the delete class (in this case, book-list). This is so that the entire item is deleted, not just the 'X' button. Don't forget to add preventDefault.

2. Create deleteBook prototype that will delete the target class once clicked. This will be attached to the UI of course.

3. In the deleteBook prototype, create an if statement that says if the selected element has the class 'delete', use DOM traversal to delete the item. 

4. Call the deleteBook prototype in the event listener from step 1 that passes the e.target parameter. 

5. Add ui.showAlert that passes in 'Book removed' and the success class so that it's green.

